<?php

namespace Hff\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EscritosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EscritosRepository extends EntityRepository
{
    public function findAllTitulos()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e ORDER BY e.titulo ASC')
            ->getResult();
    }
    
    public function findAllTitulosDesc()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e ORDER BY e.titulo DESC')
            ->getResult();
    }
    public function findAllRecientes()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e ORDER BY e.id DESC')
            ->getResult();
    }
    public function findSiguiente($id)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id > :id AND e.publicado = :verdad';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findSiguienteDelAutor($id)
    {
        $em = $this->getEntityManager();
        $escrito = $em->getRepository('HffBlogBundle:Escritos')->findOneById($id);
        $autor = $em->getRepository('HffBlogBundle:Usuarios')->findOneById($escrito->getUsuario());
        
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id > :id AND e.publicado = :verdad AND e.usuario = :autor';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setParameter('autor', $autor )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findSiguienteDeLaCategoria($id)
    {
        $em = $this->getEntityManager();
        $escrito = $em->getRepository('HffBlogBundle:Escritos')->findOneById($id);
        $categoria = $em->getRepository('HffBlogBundle:Categorias')->findOneById($escrito->getCategoria());
        
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id > :id AND e.publicado = :verdad AND e.categoria = :categoria';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setParameter('categoria', $categoria )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findAnteriorDeLaCategoria($id)
    {
        $em = $this->getEntityManager();
        $escrito = $em->getRepository('HffBlogBundle:Escritos')->findOneById($id);
        $categoria = $em->getRepository('HffBlogBundle:Categorias')->findOneById($escrito->getCategoria());
        
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id < :id AND e.publicado = :verdad AND e.categoria = :categoria ORDER BY e.id DESC';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setParameter('categoria', $categoria )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findAnterior($id)
    {
        $em = $this->getEntityManager(); 
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id < :id AND e.publicado = :verdad ORDER BY e.id DESC';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findAnteriorDelAutor($id)
    {
        $em = $this->getEntityManager();
        $escrito = $em->getRepository('HffBlogBundle:Escritos')->findOneById($id);
        $autor = $em->getRepository('HffBlogBundle:Usuarios')->findOneById($escrito->getUsuario());
        
        $dql = 'SELECT e FROM HffBlogBundle:Escritos e WHERE e.id < :id AND e.publicado = :verdad AND e.usuario = :autor ORDER BY e.id DESC';
        $query = $em->createQuery($dql)
                ->setParameter('verdad', 1)
                ->setParameter('id', $id )
                ->setParameter('autor', $autor )
                ->setMaxResults(1);
        return $query->getResult();
    }
    public function findAllByUsuario($usuario)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e WHERE e.usuario = :usuario ORDER BY e.id DESC')
            ->setParameters(array('usuario' => $usuario))
            ->getResult();
    }
    public function findAllByCategoria($categoria)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e WHERE e.categoria = :categoria ORDER BY e.id DESC')
            ->setParameters(array('categoria' => $categoria))
            ->getResult();
    }
    public function findAllMasComentados()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e ORDER BY e.totalComentarios DESC')
            ->getResult();
    }
    public function findAllMasVistos()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT e FROM HffBlogBundle:Escritos e ORDER BY e.totalVistas DESC')
            ->getResult();
    }
    
  
}
